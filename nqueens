static int N;
main(){
    N=4;
    solvenQueens(new int[N][N] ,0);
}
solvenQueens(int board[][], int col){
    if(col>=N){
        for(int i=0; i<n;i=++)
        for(int j=0;j<N;j++)
          sop(board[i][j])
    }
    for(int row=0; row<n; row++){
     if(isSafe(board,row,col)){
           board[row][col]==1
           solvenQueens(board,col,row+1);
           board[row][col]=0;
     }   
    }
}
 isSafe(int board[][], int row, int col){
    for(int i=0; i<col;i=++){
        if(board[row][i]==1)
        return false;
    }
    for(int i=row,j=col; i>=0 && j>=0 ; i--, j--){
        if(board[i][j]==1)
         return false;
    }
    for(int i=row, j=col; i<N && j>=0 ; i++,j--){
        if(board[i][j]==1)
        return false;
    }
    return true;
 }